[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0.0"]

[project]
name = "cython-cmake"
version = "0.0.0a0"
description = "CMake functions for compiling Cython extensions"
readme = { file = "README.rst", content-type = "text/x-rst" }
authors = [
    { name = "Vyas Ramasubramani" },
]
license = { text = "Apache 2.0" }
requires-python = ">=3.0"
dependencies = [
    "cython",
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Cython",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Compilers",
]

[project.optional-dependencies]
test = [
    "pytest",
    "build>=1.0.0",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme"
]

[project.entry-points."cmake.module"]
cython_cmake = "cython_cmake"

[project.urls]
Homepage = "https://github.com/vyasr/cython-cmake"

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.package-data]
"*" = ["*.cmake"]

[tool.ruff.lint]
extend-select = [
    "A",           # flake8-builtins
    "ANN",         # flake8-annotations
    "ARG",         # flake8-unused-arguments
    "B",           # flake8-bugbear
    "BLE",         # flake8-blind-except
    "C4",          # flake8-comprehensions
    "COM",         # flake8-commas
    "EM",          # flake8-errmsg
    "FBT",         # flake8-boolean-trap
    "FLY",         # flynt
    "I",           # isort
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "N",           # flake8-naming
    "PERF",        # perflint
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "S",           # eval -> literal_eval
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "TCH",         # flake8-type-checking
    "TRY",         # tryceratops
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
]
